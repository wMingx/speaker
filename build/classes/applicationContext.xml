<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository.xsd
       http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
 
        
       
       ">
       






<!-- 启用spring扫描 -->


<context:annotation-config/>

	
	<!-- 设置自动扫描的包 -->
	<context:component-scan base-package="springloz">
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	<!-- 读取数据库配置信息 -->
	<context:property-placeholder location="classpath*:jdbc.properties"/>
	
	<!-- 配置连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="logAbandoned" value="${jdbc.logAbandoned}"/>
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="validationQuery" value="${jdbc.validationQuery}"/>
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
		<property name="testOnReturn" value="${jdbc.testOnReturn}"/>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}"/>
	</bean>
	
	<!-- 配置mybatis spring的工厂Bean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置让spring管理mybatis的bean mybatis bean模板类 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	
	
	
	<!-- spring数据源事务管理bean -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	
	</bean>
	
		<!-- enable transaction annotation support -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	
	
	
	<!-- 配置spring的事务拦截器属性 -->
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="select*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>
				<prop key="obtain*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>
				<prop key="*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置spring的自动代理，拦截所有以Service类结尾的方法 -->
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Service</value>
		</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
	
	<bean class="ch.qos.logback.ext.spring.ApplicationContextHolder"/>
	
	
	
	</beans>
	
	
	
	
	
	